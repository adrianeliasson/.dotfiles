set-option -g default-shell "/usr/bin/zsh"

# Set leader key
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

set -g mouse on

set -g status-style 'bg=#333333 fg=#5eacd3'

# forget the find window.  That is for chumps
bind-key -r f run-shell "tmux neww ~/sessionizer"
bind-key -n C-f run-shell "tmux neww ~/sessionizer"
bind-key -T prefix C-r popup -b "rounded" -w 60% -h 60% "go run ."

# Start windows at 1 not 0
set -g base-index 1

# bind r source-file ~/.config/tmux/tmux.conf; display-message "Reloaded tmux config"
bind-key -T prefix C-b popup -b "rounded" -w 60% -h 60% "iac_build_here"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Resize panes with a larger step size
# bind -r h resize-pane -L 3  # Resize left by 3
# bind -r j resize-pane -D 3  # Resize down by 3
# bind -r k resize-pane -U 3  # Resize up by 3
# bind -r l resize-pane -R 3  # Resize right by 3

# Always split panes in the current pane's working directory
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# New windows always start in $HOME
bind c new-window -c ~
